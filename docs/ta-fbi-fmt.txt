This manual is not finished and if you would like to help me or add something 
to the file e-mail me at MartiD@worldnet.att.net 
 Also if you know the source code that was used in CCEdit please e-mail it to 
me or some thing because I would like to try to make something like that for TA if that's 
possible.
I would like to say before I start that if you edit the game there could be side effects 
I don't if it works in multi player mode i was planing to test it and tell you   
	To edit TA you need one of the HPI extractors like Write HPI and extract the 
totala1.hpi file and put all the things that are extracted in the directory you have 
Totala.exe
After you do that you should get a few subdirectories there are things like units that's 
where you find all of the FBI files that tell TA what it needs to know about the units, 
I used Notepad to edit the file that weren't to big to use then I used WordPad and you can 
put the categories in that you like but some have to be in there. Some of the categories 
are just 1 and 0 1 being on and 0 being off the others are names or numbers. 
A ? means that I'm not certain or I don't have any idea what that means.      
The categories that you can edit are
Unit Name=the name of the unit
Version=?
Side=the side it is on
Objectname= I think is the internal name for the unit
Designation Name= the name you see when you put the mouse over the unit 
Description= the description of the unit 
Footprint X= the footprint going ne way 
Footprint Z= the foot print going the over way
BuildCostEnergy= how much energy it takes to build it
BuildCostMetal= how much metal you need to build it
MaxDamage= how much damage the unit can take
MaxWaterDepth= how deep it can go in water
MaxSlope= how much of a slope it can be built on and go over?
EnergyUse= how much energy it needs to do things
BuildTime= how long it takes to build it
WorkerTime= how fast it will build some thing
Bmcode=? You probably don't want to mess with this
Builder= I think if it can build things or not
ThreeD= if its a 3D unit 
ZBuffer= some thing to do with the graphics you probably don't want to mess with this
NoAutoFire=If the unit has no auto fire
SightDistance= how far it can see
RadarDistance= how far they radar will go
SoundCategory=?
EnergyStorage= how much energy that unit can hold leave it blank for the commander
MetalStorage= same as above but for metal
ExplodeAs= how big the explosion is when your unit dies 
SelfDestructAs= how big the explosion is when you make the unit self distruct
Category= what type of unit it is ?
TEDClass= you probably don't want to mess with it
CopyRight= the annoying Cavedog copy right
YardMap=?
Corpse= what the wreckage looks like
GermanName= what the name of the unit is in German
GermanDescription= the description in German
UnitNumber= the number of the unit
FrenchName= the name of the unit in French
FrenchDescription= the description in French
firestandorders=?
StandingFireOrder=?
mobilestandorders=?
StandingMoveOrders=?
canmove= the unit can move
canpatrol= the unit can patrol
canstop= the unit can stop what ever its doing
canguard= the unit can guard another unit
MaxVelocity=?
BrakeRate= how fast the unit can stop
Acceleration= how fast the unit can speed up
TurnRate= how fast the unit can turn
SteeringMode= how it steers
ShootMe= ?
CanFly= the unit can fly if you put a 1 
crusisealt=?
Scale=?
BankScale=?
Builddistance= how far the unit can be away from the unit to start building
CanReclamate= can reclaim?
EnergyMake= how much energy the unit makes
MetalMake= how much metal the unit makes
DefaultMissionType=?
manuverleashlength= how for the unit can go when you put the orders to maneuver
MovementClass= how it moves like a Kbot?
Upright= if the unit stands up or not	
standingmoveorders=?
buildangle= what angle it can build at or what angle it can be built at
Weapon1= the primary weapon
wpri_badTargetCategory= what kind of unit the primary weapon is not go at killing
BadTargetCategory= the kind of units that the unit is not go at killing
antiweapons= ?
DamageModifier= if the unit will repair its self
canattack= the unit can attack another unit
ActivateWhenBuilt= the unit is activated after is built
onoffable= the unit can be turned off and on
RadarDistanceJam= the area the unit will jam
sortbias=?
IsAirBase=?
MinWaterDepth= the depth that the water has to be to go there
WaterLine=?
NoShadow= the unit wont have a shadow 
TransMaxUnits=the max amount of units that it can carry
canload= the unit can load other units
transportsize=?
Weapon2= the second weapon 
wsec_badTargetCategory= the group that the second weapon has trouble killing 
Floater= if the unit floats?
NoChaseCategory= the type of unit that it wont chase
HoverAttack= if the unit will hover while attacking
Weapon3= the third weapon
SonarDistance= the distance of the units sonar
candgun= they unit can dgun
CloakCost= the cost of cloaking the unit 
CloakCostMoving= the cost of cloaking that unit while its moving
HealTime= how long it takes to heal that unit
CanCapture= if they unit can capture or not
HideDamage= if the other players can see if that unit is about to die
ImmuneToParalyzer= immune to paralyzer
norestict=?
IsFeature=?
PigLatinName=the name in Pig Latin
SpanishName= the Spanish name
ItalianName= the name in Itlian
JapaneseName= the name in Japanese
PigLatinDescription= the description in PigLatin	
MoveRate1=?	
teleporter=if the unit can teleport 	
Stealth=if the unit is stealth	
MakesMetal=if the unit makes metal 	
ExtractsMetal=if the unit extracts metal	
altfromsealevel=?	
attackrunlength=	
Waterline=?	
TidalGenerator=if it is a tidal generator	
transportmaxunits=the max amount of units that it can transport 	
kamikaze=if it's a kamikaze	
WindGenerator=if it's a wind generator	
MobileStandOrders=?	
BuildAngle= the angle that it can build at or the angle it can be built at	
PitchScale=?	
MoveRate2=?

The ARM abbreviations are
ARMAAP=Advanced Aircraft Plant
ARMACA=Advanced Construction Aircraft
ARMACK=Advanced Construction Kbot
ARMACV=Advanced Construction Vehicle
ARMALAB=Advanced Kbot Lab
ARMAMD=Fortitude Anti-nuke
ARMANNI=Annihilator
ARMAP=Aircraft plant
ARMARAD=Advanced Radar Tower
ARMASER=Eraser
ARMASP=Air Repair Pad
ARMASY=Advanced Ship Yard
ARMATLAS=Atlas
ARMAVP=Advanced Vehicle Plant
ARMBATS=Millenium
ARMBRAWL=Brawler
ARMBRTHA=Big Bertha
ARMBULL=Bulldog
ARMCA=Construction Aircraft
ARMCARRY=Colossus
ARMCK=Construction Kbot
ARMCROC=Triton
ARMCRUS=Conqueror
ARMCS=Construction Ship
ARMCV=Construction Vehicle
ARMDRAG=Dragons Teeth
ARMESTOR=Energy Storage
ARMFAST=Zipper
ARMFAV=Jeffy
ARMFIDO=Fido
ARMFIG=Freedom Fighter
ARMFLASH=Flash
ARMFUS=Fusion Plant
ARMGEO=Geothermal Plant
ARMGUARD=Guardian
ARMHAM=Hammer
ARMHAWK=Hawk
ARMHLT=Sentinel
ARMJAM=Jammer
ARMJETH=Jethro
ARMLAB=Kbot Lab
ARMLANCE=Lancet
ARMLLT=Light Laser Tower
ARMMAKR=Metal Maker
ARMMART=Luger
ARMMERL=Merl
ARMMEX=Metal Extractor
ARMMOHO=Moho Mine
ARMMSHIP=Ranger
ARMMSTOR=Metal Storage
ARMPEEP=Peeper
ARMPNIX=Phoenix
ARMPT=Skeeter
ARMPW=Peewee
ARMRAD=Radar Tower
ARMRL=Defender
ARMROCK=Rocko
ARMROY=Crusader
ARMSAM=Samson
ARMSEER=Seer
ARMSILO=Retaliator
ARMSOLAR=Solar Collector
ARMSONAR=Sonar Station
ARMSPID=Spider
ARMSTUMP=Stumpy
ARMSUB=Lurker
ARMSUBK=Piranha
ARMSY=Ship Yard
ARMTHUND=Thunder
ARMTIDE=Tidal Generator
ARMTL=Torpedo Launcher
ARMTSHIP=Hulk
ARMVADER=Invader
ARMVP=Vehicle Plant
ARMWIN=Wind Generator
ARMZEUS=Zeus
ARMCOM=Commander
ARMGATE=Galactic Gate
The CORE abbreviations are
CORAAP=Advanced Aircraft Plant
CORACA=Advanced Construction Aircraft
CORACK=Advanced Construction Kbot
CORACV=Advanced Construction Vehicle
CORAK=A.K.
CORALAB=Advanced Kbot Lab
CORAP=Aircraft Plant
CORAPE=Rapier
CORARAD=Advanced Radar Tower
CORASP=Air Repair Pad
CORASY=Advanced Ship Yard
CORAVP=Advanced Vehicle Plant
CORBATS=Warlord
CORCA=Construction Aircraft
CORCAN=The Can
CORCARRY=Hive
CORCK=Construction Kbot
CORCRASH=Crasher
CORCRUS=Executioner
CORCS=Construction Ship
CORCV=Construction Vehicle
CORDOOM=Doomsday Machine
CORDRAG=Dragons Teeth
CORESTOR=Energy Storage
CORETER=Deleter
CORFAV=Weasel
CORFINK=Fink
CORFMD=Fortitude Anti-nuke
CORFUS=Fusion Plant
CORGATOR=Instigator
CORGEO=Geothermal Plant
CORGOL=Goliath
CORHLT=Gaat Gun
CORHURC=Hurricane
CORINT=Intimidator
CORLAB=Kbot Lab
CORLLT=Light Laser Tower
CORMAKR=Metal Maker
CORMART=Pillager
CORMEX=Metal Extractor
CORMIST=Slasher
CORMOHO=Moho Mine
CORMSHIP=Hydra
CORMSTOR=Metal Storage
CORPT=Searcher
CORPUN=Punisher
CORPYRO=Pyro
CORRAD=Radar Tower
CORRAID=Raider
CORREAP=Reaper
CORRL=Pulverizer
CORROACH=Roach
CORROY=Enforcer
CORSEAL=Crock
CORSHAD=Shadow
CORSHARK=Shark
CORSILO=Silencer
CORSOLAR=Solar Collector
CORSONAR=Sonar Station
CORSPEC=Spectre
CORSTORM=Storm
CORSUB=Snake
CORSY=Ship Yard
CORTHUD=Thud
CORTIDE=Tidal Generator
CORTITAN=Titan
CORTL=Torpedo Launcher
CORTSHIP=Envoy
CORVALK=Valkyrie
CORVAMP=Vamp
CORVENG=Avenger
CORVP=Vehicle Plant
CORVRAD=Informer
CORVROC=Diplomat
CORWIN=Wind Generator
CORCOM=Commander
CORGATE=Galactic Gate
CORBUILD=Hydration Plant
CORTRUCK=Truck

To edit weapons you need the following things
	/* A weapon must fit into one of these basic categories */

// 1) ballistic = Weapon is fired according to a ballistic path using gravity
// 2) lineofsight = Weapon is fired in a straight line, gravity does not effect path
// 3) dropped = Weapon is dropped in order to use it, typically a bomb but could be a chemical
you dont have to have all of theis for it to work  
// ID is a unique value in the range 0-255 which identifies the weapon
// range is in pixels
// coverage is what the protection umbrella is for weapons that shoot other weapons
// noexplode = No explosion when weapon impacts target
// reloadtime = Seconds between shots (floating point allowed)
// energypershot = Energy consumed per shot, most use none
// weapontimer = How long weapon is active in seconds (floating point allowed), 
trajectory weapons use 0 so it is calculated
// noautorange = When set the weapon will not detonate at range automatically, 
used mostly for heavy rockets
// weaponvelocity = Maximum attainable weapon veolocity in pixels/second
// weaponacceleration = Expressed in pixels/second/second
// turnrate = Used for guided weapons, is in angular units (0-64k)/second
// areaofeffect = The total area that receives that damage, one impact per unit in the area
// edgeeffectiveness = The percentage (1.0 = 100%) of the damage that is inflicted at the 
edge of the area of effect.  Used for drop-off
// turret = Weapon must be deployed from a turret with a 360 deg rotation and pitch
// firestarter = Weapon will cause fires, expressed as a %, where 100% guarantees a fire
// unitsonly = Weapon will only detonate on enemy units as opposed to obstructing terrain
// burst = How many repeat times a weapon fires in one burst, ie. Flamethrower
// burstrate = The time delay when in burst mode between events
// sprayangle = Maximum deviation from the straight line to the target the weapon strays, 
used for burst weapons
// randomdecay = Maximum time delta that burst weapon will randomly decay at end of path
// groundbounce = Weapon will not detonate with the ground but instead bounce
// flighttime = The time the unit will fly for after it enters the second phase of operation,
 used for starburst missiles
// selfprop = Weapon is self propelled with a burn time described by flighttime
// twophase = Indicates weapon operates in two phases
// weapontype2 = Describes another weapon that the weapon turns into in the second phase
// guidance = Indicates that weapon is guided and uses the turn rate above to track enemy 
unit
// tracks = When set the weapon will track a moving target after a weapon conversion
// waterweapon = Weapon is meant to travel through water
// burnblow = Weapon will detonate when it comes to the end of its range
// accuracy = Amount of accuracy in 64K deg that weapon is good for, 0=100%
// tolerance = Amount of accuracy weapon will use when aiming, most are default 0
// aimrate = How fast (on average) the weapon aims, in 64K deg / sec.  Used by UnitView.
// startvelocity = Weapon will start at this velocity instead of 0
// minbarrelangle = The minimum angle (in degrees) the barrels can point, used in ballistic 
calculations
// paralyzer = Weapon will stun the enemy for a length of time described in the damage field,
 time=ticks.
// model = 3D model to use as this weapon
// color = Color of beam weapon from the game palette
// color2 = Color to use on the beam weapon to make better and cooler, CGT
// smoketrail = Indicates whether or not a weapon will emit a smoke trail
// smokedelay = Smoke dispersal interval expressed in seconds
// startsmoke = Draw a puff of smoke when the weapon fires
// endsmoke = Draw a puff of smoke when weapon terminates
// rendertype = Type of rendering system to use, 3D model, bitmap, etc.
// beamweapon = Weapon is a straight beam weapon like a laser
// explosiongaf = .GAF file that the explosion art is in
// explosionart = name of animation sequence for explosion
// waterexplosiongaf = .GAF file that the water explosion art is in
// waterexplosionart = name of animation sequence for water explosion
// propeller = if the model has a propeller that spins
// soundstart = Sound to make when the weapon fires
// soundhit = Sound to make when the weapon detonates (if the weapon detonates)
// soundwater = Sound to make when the weapon hits the water
// soundtrigger = Make the weapon sound when the weapon fires in burst mode
// commandfire = This weapon will need to be expressly fired by the user each and every time 
it is used
// energy = Amount of energy needed
// metal = Amount of metal needed

here is a sample entry for the flamethrower
[FLAMETHROWER]
	{
	ID=1;
	name=Flame Thrower;
	rendertype=5;
	ballistic=1;
	turret=1;

	range=160;
	reloadtime=1.2;
	weapontimer=1;
	weaponvelocity=188;
	areaofeffect=32;
	burst=17;
	burstrate=.04;
	sprayangle=1024;
	randomdecay=.3;
	soundstart=Flamhvy1;
	soundhit=burn02;
	firestarter=100;
	groundbounce=1;
	smokedelay=1;
	startsmoke=0;
	endsmoke=1;
	tolerance=200;

	[DAMAGE]
		{
		default=10;
		corpyro=2;
		}
	}

More to come in a while
